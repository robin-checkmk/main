---
- name: "Update APT Cache."
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600

- name: "Ensure Dependencies are present."
  ansible.builtin.package:
    name: needrestart
    state: present

- name: "Disable needrestart Interaction."
  ansible.builtin.template:
    src: needrestart.conf.j2
    dest: /etc/needrestart/conf.d/interaction.conf
    mode: 0644
    owner: root
    group: root
  when: upgrade_needrestart_disable_interaction | bool

- name: "Mark packages on hold."
  ansible.builtin.shell: apt-mark hold {{ item }}
  args:
    executable: /bin/bash
  with_items: "{{ upgrade_packages_on_hold }}"
  register: upgrade_apt_mark_status
  changed_when: upgrade_apt_mark_status.rc == 0 or "No packages found" in upgrade_apt_mark_status.stderr
  failed_when: upgrade_apt_mark_status.rc == 1000

# We need to run the command instead of the module, so we can store the output in a list.
- name: "Store List of Updates for further Inspection."  # noqa command-instead-of-module no-changed-when
  ansible.builtin.command: apt list --upgradable
  register: upgrade_update_list_apt
  when: upgrade_reporting_enable | bool

- name: "Upgrade via APT."  # noqa package-latest
  ansible.builtin.apt:
    upgrade: safe
    state: latest
    cache_valid_time: 3600

- name: "Cleanup via APT - autoremove."
  ansible.builtin.apt:
    autoremove: true
    purge: true
    cache_valid_time: 3600

- name: "Cleanup via APT - autoclean."
  ansible.builtin.apt:
    autoclean: true
    cache_valid_time: 3600

- name: "Unhold Packages."
  ansible.builtin.shell: apt-mark unhold {{ item }}
  args:
    executable: /bin/bash
  with_items: "{{ upgrade_packages_on_hold }}"
  register: upgrade_apt_mark_status
  changed_when: upgrade_apt_mark_status.rc == 0 or "No packages found" in upgrade_apt_mark_status.stderr
  failed_when: upgrade_apt_mark_status.rc == 1000

- name: "Check for Reboot Hint."
  ansible.builtin.shell: |
    set -o pipefail
    needrestart -b
  args:
    executable: "/bin/bash"
  register: reboot_hint_apt
  changed_when: "'NEEDRESTART-KSTA: 1' not in reboot_hint_apt.stdout"

- name: "Check for Service Restarts."
  ansible.builtin.shell: |
    set -o pipefail
    needrestart -b | grep NEEDRESTART-SVC | cut -d ' ' -f2
    exit 0
  args:
    executable: "/bin/bash"
  register: service_restarts_apt
  changed_when: "service_restarts_apt.stdout_lines | length"

- name: "Set Reboot Hint."
  ansible.builtin.set_fact:
    reboot_hint: true
  when: "'NEEDRESTART-KSTA: 1' not in reboot_hint_apt.stdout"

- name: "Set Service Restarts."
  ansible.builtin.set_fact:
    service_restarts: "{{ service_restarts_apt.stdout_lines }}"
  when: "service_restarts_apt.stdout_lines | length"

- name: "Trigger Checkmk APT Plugin."
  ansible.builtin.file:
    path: /var/lib/check_mk_agent/cache/plugins_mk_apt.cache
    state: absent
