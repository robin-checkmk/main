---
name: Release new Collection Version
on: # yamllint disable-line rule:truthy
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current version
        id: current_version
        run: echo "version=$(grep 'version:' galaxy.yml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Copy Files and Directories to Source
        run: |
          mkdir -p build/src
          cp $files build/src
          cp -rf $directories build/src
        env:
          # files: "README.md LICENSE ansible.cfg galaxy.yml"
          files: "README.md ansible.cfg galaxy.yml"
          # directories: "playbooks plugins roles vars"
          directories: "changelogs docs meta playbooks plugins"

      - name: Compile Collection Changelog
        run: antsibull-changelog release

      - name: Build Ansible Collection
        run: ansible-galaxy collection build build/src --force

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.current_version.outputs.version }}
          release_name: v${{ steps.current_version.outputs.version }}
          body: |
            # Ansible Collection: thorian93.main

            For information about this collection and how to install it, refer to the [README](https://github.com/thorian93/main/blob/main/README.md).
            
            For a detailed changelog, refer to the [CHANGELOG](https://github.com/thorian93/main/blob/main/CHANGELOG.rst).
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: thorian93-main-${{ steps.current_version.outputs.version }}.tar.gz
          asset_name: thorian93-main-${{ steps.current_version.outputs.version }}.tar.gz
          asset_content_type: application/tar+gzip

      # - name: Deploy Ansible collection to Galaxy
      #   run: ansible-galaxy collection publish thorian93-main-${{ steps.current_version.outputs.version }}.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
